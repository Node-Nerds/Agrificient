


<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.js"></script>
  <link rel="stylesheet" href="/bootstrap.min.css">
  <!-- <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet"> -->
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.js"></script>
    
    <!-- <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>   -->
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css">

  <title>Document</title>


   <!-- Bootstrap core CSS -->
   

   <!-- Custom styles for this template -->
   <link rel="stylesheet" href="/bidbox/addproduct.css">
</head>

<body class="text-center">

  <form class="form-add" action="/bidbox/add_product" method="post">
    <img src="/logo.svg" alt="" width="150" height="150">
    <h3 class="text-primary mb-3">Add Product</h3>

    <div class="form-group text-left">
      <label for="product_name">Product Name</label>
      <input type="text" id="name" name="product_name" class="form-control" placeholder="Name" required autofocus>
    </div>

    <div class="form-group text-left">
      <label for="product_cat">Product Category</label>
      <select name="product_cat" id="product_cat" class="form-control" required>
        <% categories.forEach((cat)=>{ %>
            <option value="<%=cat%>"><%=cat%></option>
        <% })%>
      </select>  
    </div>

    <div class="form-group text-left">
      <label for="quantity">Quantity</label>
      <input type="text" id="quantity" name="quantity" class="form-control" required>
    </div>

    <div class="form-group text-left">
      <label for="unit">Unit</label>
      <select name="unit" id="unit" class="form-control" required>
        <option value="kg">Kilo grams(kg)</option>
        <option value="mt">Metric ton (M. ton)</option>
        <option value="qtl">Quintle</option>
      </select> 
    </div>


    <div class="form-group text-left">
      <label for="basePrice">Base Price</label>
      <input type="text" id="basePrice" name="basePrice" class="form-control" required>
    </div>

    <div class="form-group text-left">
      <label for="description">Description</label>
      <input type="text" id="description" name="description" class="form-control" required>
    </div>

    <div id="inputDate" class="form-group text-left">
      <label for="startTime">Start Date Time</label>
      <div class='input-group date' id='datetimepicker1' data-provider="datepicker">
        <input type='date' name="start_dt"  id="startTime" class="form-control" />
        <div class="input-group-addon">
            <span class="glyphicon glyphicon-calendar"></span>
        </div>
      </div>
    </div>

    <div class="form-group text-left">
      <label for="startTime">End Date Time</label>
        <div class='input-group date' id='datetimepicker2'>
          <input type='date' name="end_dt" id="endTime" class="form-control" />
          <span class="input-group-addon">
              <span class="glyphicon glyphicon-calendar"></span>
          </span>
        </div>
    </div>
    

             

    <div class="form-group text-left">
      <label for="x">Latitude</label>
      <input type="text" id="latitude" name="x" class="form-control" required>
    </div>

    <div class="form-group text-left">
      <label for="y">Longitute</label>
      <input type="text" id="longitude" name="y" class="form-control" required>
    </div>
    <div id="map"></div> 

    <div class="form-group text-left">
      <label for="pincode">Pincode</label>
      <input type="text" id="pincode" name="pincode" class="form-control" required>
    </div>


    <a type="button" onclick="return get_city()" class="btn btn-lg btn-secondary">Get details</a>
        <div class="form-group text-left">
            <label for="city">City</label>
            <input type="text" name="city" id="city" class="form-control" required>  
        </div>
        <div class="form-group text-left">
            <label for="district">District</label>
            <input type="text" name="district" id="district" class="form-control" required>  
        </div>
        <div class="form-group text-left">
            <label for="state">State</label>
            <input type="text" name="state" id="state" class="form-control" required>  
        </div>

    


    <button type="submit" class="btn btn-lg btn-primary"> Submit </button>

  </form>




  <!-- Google Map Script -->
  <script async src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDtLZdve7jf15PETQYF6TgR05sHZnVdFc4"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.9.0/moment.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>

  </script>

  <script>

      function get_city(){
          let pincode = document.getElementById("pincode").value;

          axios({
                method: 'get',
                url: 'https://api.postalpincode.in/pincode/'+pincode,
            })
            .then(function (response) {
                document.getElementById("city").value = response.data[0].PostOffice[0].Block;
                document.getElementById("district").value = response.data[0].PostOffice[0].District;
                document.getElementById("state").value = response.data[0].PostOffice[0].State;
            })
            .catch(function (error) {
                console.log(error);
            });
      }
    window.addEventListener('load', (event) => {

      var position = [40.748774, -73.985763];

      //Success Callback 
      const successCallback = (coords) => {
        // document.getElementById("latitude").value = coords.coords.latitude;
        // document.getElementById("longitude").value = coords.coords.longitude;

        position[0] = coords.coords.latitude;
        position[1] = coords.coords.longitude;

        //Load google map
        google.maps.event.addDomListener(window, 'load', initialize());
      }

      //Error Callback
      const errorCallback = (error) => {
        console.log(error);
      }

      //Get Location
      const watchId = navigator.geolocation.watchPosition(successCallback, errorCallback, {
        enableHighAccuracy: true,
        timeout: 5000,
      });

      //Initialise
      function initialize() {
        var latlng = new google.maps.LatLng(position[0], position[1]);
        var myOptions = {
          zoom: 10,
          center: latlng,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("map"), myOptions);

        marker = new google.maps.Marker({
          position: latlng,
          map: map,
          title: "Latitude:" + position[0] + " | Longitude:" + position[1]
        });

        google.maps.event.addListener(map, 'click', function (event) {
          var result = [event.latLng.lat(), event.latLng.lng()];

          document.getElementById("latitude").value = result[0];
          document.getElementById("longitude").value = result[1];

          transition(result);
        });
      }

      var numDeltas = 100;
      var delay = 10; //milliseconds
      var i = 0;
      var deltaLat;
      var deltaLng;

      function transition(result) {
        i = 0;
        deltaLat = (result[0] - position[0]) / numDeltas;
        deltaLng = (result[1] - position[1]) / numDeltas;
        moveMarker();
      }

      function moveMarker() {
        position[0] += deltaLat;
        position[1] += deltaLng;
        var latlng = new google.maps.LatLng(position[0], position[1]);
        marker.setTitle("Latitude:" + position[0] + " | Longitude:" + position[1]);
        marker.setPosition(latlng);
        if (i != numDeltas) {
          i++;
          setTimeout(moveMarker, delay);
        }
      }
    });

    $(function () {
                $('#datetimepicker1').datetimepicker({
                  format: 'YYYY-MM-DD',  
                  // minDate:new Date()
                });
                
                $('#datetimepicker2').datetimepicker({
                  format: 'YYYY-MM-DD',  
                  // minDate:new Date()
                });

                $("#inputDate").on("dp.change", ".date",function() {
                  console.log("ch");
                  var minDate = new Date($("#startTime").val());
                  $('#datetimepicker2').datetimepicker('minDate', minDate);
                });


            });

      
   

  </script>

</body>

</html>